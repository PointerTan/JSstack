{"version":3,"sources":["../src/index.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import parseArgs from \"minimist\";\nimport staticS from \"serve-static\";\nimport fs from \"fs\";\nimport connect from 'connect';\n\nfunction disallowUnprocessedAssets(req, res, next) {\n  const lastPointIndex = req.url.lastIndexOf('.');\n  const typeString = req.url.substring(lastPointIndex, req.url.length);\n  if (typeString === \".jade\" || typeString === \".less\") {\n\n    res.statusCode = 404;\n    res.end(\"not found\");\n  }\n  else {\n    next();\n  }\n}\n\nexport default function (path) {\n  const app = connect();\n  console.log(\"path:\" + path);\n  if (path) {\n\n    app.use(disallowUnprocessedAssets);\n\n    app.use(staticS(path));\n    app.use(\n      function (req, res) {\n        console.log(req.url);\n        var lastPointIndex = req.url.lastIndexOf('.');\n        var typeString = req.url.substring(lastPointIndex, req.url.length);\n        console.log(typeString);\n        if (typeString === \".html\") {\n          var name = req.url.substring(0, lastPointIndex);\n\n          fs.readFile(path + name + '.jade', 'utf-8', function (err, data) {\n            if (err) {\n              console.log(err);\n            } else {\n              // console.log(data); \n              // res.writeHead(200, {\n              //     'Content-Length': data.length,\n              //     'transfer-encoding': ''\n              // });\n              // res.end();\n              var options = { pretty: true };\n              var jade = require('jade');\n              var output = jade.render(data, options);\n              console.log(\"output: \" + output);\n              res.setHeader(\"Content-Type\", \"text/html; charset=UTF-8\");\n              res.end(output);\n            }\n          })\n        }\n        else if (req.url === \"/foo.css\") {\n          // let fs = require(\"fs\");\n          fs.readFile(path + '/foo.less', 'utf-8', function (err, data) {\n            if (err) {\n              console.log(err);\n            } else {\n              console.log(data);\n              let less = require('less');\n              less.render(data, function (e, css) {\n                res.setHeader(\"Content-Type\", \"text/css; charset=UTF-8\");\n                res.end(css);\n              });\n            }\n          });\n        }\n        else if (req.url === \"/\") {\n          // var fs = require(\"fs\");\n          fs.readFile(path + '/index.jade', 'utf-8', function (err, data) {\n            if (err) {\n              console.log(err);\n            } else {\n              console.log(data);\n              var options = { pretty: true };\n              var jade = require('jade');\n              var fn = jade.render(data, options);\n              res.end(fn);\n            }\n          })\n        }\n        else {\n          res.statusCode = 404;\n          res.end(\"not found\");\n        }\n      }\n    );\n  }\n  return app;\n}\n"]}
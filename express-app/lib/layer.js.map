{"version":3,"sources":["../src/layer.js"],"names":[],"mappings":";;;;;QAGgB,K,GAAA,K;;AAHhB;;;;AACA;;;;;;AAEO,SAAS,KAAT,CAAe,IAAf,EAAqB,MAArB,EAA6B;AAChC,QAAM,YAAY,IAAlB;AACA,SAAK,IAAL,GAAY,EAAZ;AACA,SAAK,KAAL,GAAa,EAAb;AACA,SAAK,EAAL,GAAU,4BAAK,IAAL,EAAW,KAAK,IAAhB,EAAsB,EAAE,KAAK,KAAP,EAAtB,CAAV;AACA,SAAK,GAAL,GAAW,4BAAK,OAAO,KAAZ,EAAmB,KAAK,KAAxB,EAA+B,EAAE,KAAK,KAAP,EAA/B,CAAX;AACA,SAAK,IAAL,GAAY,IAAZ;AACA,SAAK,MAAL,GAAc,MAAd;AACA,SAAK,KAAL,GAAa,UAAU,SAAV,EAAqB;AAC9B,YAAI,UAAU,yBAAI,SAAJ,CAAd;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,YAAI,UAAU,EAAV,CAAa,IAAb,CAAkB,OAAlB,CAAJ,EAAgC;AAC5B,gBAAM,cAAc,IAAI,MAAJ,EAApB;AACA,gBAAM,WAAW,UAAU,EAAV,CAAa,IAAb,CAAkB,OAAlB,CAAjB;AACA,wBAAY,IAAZ,GAAmB,SAAS,CAAT,CAAnB;;AAEA,gBAAI,SAAS,EAAb;AACA,iBAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,UAAU,IAAV,CAAe,MAAnC,EAA2C,GAA3C,EAAgD;AAC5C,uBAAO,UAAU,IAAV,CAAe,CAAf,EAAkB,IAAzB,IAAiC,SAAS,IAAI,CAAb,CAAjC;AACH;AACD,wBAAY,MAAZ,GAAqB,MAArB;;AAEA,gBAAI,KAAK,MAAL,IAAe,KAAK,MAAL,CAAY,SAA/B,EAA0C;AACtC,4BAAY,GAAZ,GAAkB,QAAQ,KAAR,CAAc,KAAK,IAAL,CAAU,MAAxB,EAAgC,QAAQ,MAAxC,CAAlB;AACA;AACH,aAHD,MAIK;AACD,4BAAY,GAAZ,GAAkB,OAAlB;AACA;AACH;;AAED;AACA;AACA;;AAEA,mBAAO,WAAP;AACH;AACJ,KApCD;AAqCH","file":"layer.js","sourcesContent":["import p2re from \"path-to-regexp\"\nimport uri from 'uridecode'\n\nexport function Layer(path, handle) {\n    const layerThis = this;\n    this.name = [];\n    this.name1 = [];\n    this.re = p2re(path, this.name, { end: false });\n    this.re1 = p2re(path + \"/:a\", this.name1, { end: false });\n    this.path = path;\n    this.handle = handle;\n    this.match = function (matchPath) {\n        let subPath = uri(matchPath);\n        // console.log(\"subPath:\" + subPath + \"  layer Path:\" + layerThis.path);\n        // if (subPath.length >= layerThis.path.length && subPath.startsWith(layerThis.path)) {\n        // if (layerThis.path === '/' && subPath === '/') {\n        //     return newObject;\n        // }\n\n        // console.log(p2re(layerThis.path, { end: false }).test('/') + '  layer path: ' + layerThis.path + \"  \" + layerThis.re.test(subPath));\n\n        if (layerThis.re.test(subPath)) {\n            const matchObject = new Object;\n            const matchArr = layerThis.re.exec(subPath)\n            matchObject.path = matchArr[0]; \n\n            let params = {};\n            for (let i = 0; i < layerThis.name.length; i++) {\n                params[layerThis.name[i].name] = matchArr[i + 1];\n            }\n            matchObject.params = params;\n\n            if (this.handle && this.handle.hasFather) {\n                matchObject.url = subPath.slice(this.path.length, subPath.length);\n                // console.log(\"a\" + matchObject.url);\n            }\n            else {\n                matchObject.url = subPath;\n                // console.log(subPath);\n            }\n\n            // console.log(layerThis.name);\n            // console.log(matchArr);\n            // console.log(params);\n\n            return matchObject;\n        }\n    }\n}"]}